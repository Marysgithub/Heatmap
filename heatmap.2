Enhanced Heat Map
A heat map is a false color image (basically image(t(x))) with a dendrogram added to the left side and/or to the top. Typically, 
reordering of the rows and columns according to some set of values (row or column means) within the restrictions imposed by the 
dendrogram is carried out.

热图： 伪彩色图像，包含左侧及或上方的进化树。在应用进化树时一般根据行列的值重新排序。

使用方法：
heatmap.2 (x,

           # dendrogram control Rowv = TRUE, Colv=if(symm)"Rowv" else TRUE, distfun = dist, hclustfun = hclust, dendrogram = c("both","row","column","none"), reorderfun = function(d, w) reorder(d, w), symm = FALSE,

           # data scaling scale = c("none","row", "column"), na.rm=TRUE,

           # image plot revC = identical(Colv, "Rowv"), add.expr,

           # mapping data to colors breaks, symbreaks=any(x < 0, na.rm=TRUE) || scale!="none",

           # colors col="heat.colors",

           # block sepration colsep, rowsep, sepcolor="white", sepwidth=c(0.05,0.05),

           # cell labeling cellnote, notecex=1.0, notecol="cyan", na.color=par("bg"),

           # level trace trace=c("column","row","both","none"), tracecol="cyan", hline=median(breaks), vline=median(breaks), linecol=tracecol,

           # Row/Column Labeling margins = c(5, 5), ColSideColors, RowSideColors, cexRow = 0.2 + 1/log10(nr), cexCol = 0.2 + 1/log10(nc), labRow = NULL, labCol = NULL, srtRow = NULL, srtCol = NULL, adjRow = c(0,NA), adjCol = c(NA,0), offsetRow = 0.5, offsetCol = 0.5, colRow = NULL, colCol = NULL,

           # color key + density info key = TRUE, keysize = 1.5, density.info=c("histogram","density","none"), denscol=tracecol, symkey = any(x < 0, na.rm=TRUE) || symbreaks, densadj = 0.25, key.title = NULL, key.xlab = NULL, key.ylab = NULL, key.xtickfun = NULL, key.ytickfun = NULL, key.par=list(),

           # plot labels main = NULL, xlab = NULL, ylab = NULL,

           # plot layout lmat = NULL, lhei = NULL, lwid = NULL,

           # extras extrafun=NULL, ... )
           
Arguments参数：

x 待绘制的数值型矩阵
Rowv 确定是否及如何按行绘制进化树。默认为TRUE。
Colv 确定是否按列绘制进化树，默认为TRUE。
distfun 计算行与列之间的距离
hclustfun 用来计算层级聚类的函数，默认为hclust
dendrogram 提示进化树状态，行， 列，无
reorderfun 按照权重重新排列进化树的行列 function(d, w) 
symm 逻辑指示是否对矩阵进行对程，只有数值矩阵为方阵时才成立
scale  指示是否在行或列的方向上进行缩放，默认为无
na.rm 逻辑指示是否删除NA值
revC 逻辑指示是否列的顺序被颠倒
add.expr 绘图后添加表达式
breaks 断点在min(x)和max(x)之间等差分布
symbreaks 布尔判断对称断点是否为0.如有负值则为真。否则为假。
col 设置图像颜色
colsep, rowsep, sepcolor 可选参数。将某行某列与其他隔开
sepwidth 两个向量确定单元格的长和宽 默认 c(0.05, 0.05)
cellnote 放置在单元格内的字符串，例如P值
notecex 字符大小
notecol 字符颜色
(optional) character string specifying the color for cellnote text. Defaults to "cyan".
na.color NA值的颜色
trace  行列间是否有分隔线
tracecol  分割线的颜色，默认为 蓝绿色 cyan
character string giving the color for "trace" line. Defaults to "cyan".
hline, vline, linecol 是否在单元格间绘制点线
margins 行，列名的边距
ColSideColors 列名的颜色
RowSideColors 行名的颜色
cexRow, cexCol 行列标签的字符大小
labRow, labCol 行列标签，默认为矩阵行列名
srtRow, srtCol 行列标签的角度
adjRow, adjCol 行列标签的调整 左右，上下
offsetRow, offsetCol 行列标签边缘
colRow, colCol 行列标签的颜色
key 判断是否显示colorkey
keysize 大小
density.info 是否叠加柱状图，密度图在color key上
denscol 密度信息的颜色
symkey 布尔判断color key是否以0对称 如包含负值则默认为True 
densadj 调节密度值，默认为0.25
key.title 标题
key.xlab 标签
key.ylab
key.xtickfun 计算位置
key.ytickfun
key.par 参数
main, xlab, ylab 坐标轴名称 默认无
lmat, lhei, lwid 位置，列高，列宽
extrafun 其他函数

Examples
 data(mtcars)
 x  <- as.matrix(mtcars)
 rc <- rainbow(nrow(x), start=0, end=.3)
 cc <- rainbow(ncol(x), start=0, end=.3)

 ##
 ## demonstrate the effect of row and column dendrogram options
 ##
 heatmap.2(x)                    ## default - dendrogram plotted and reordering done. 默认一步绘图。
 heatmap.2(x, dendrogram="none") ##  no dendrogram plotted, but reordering done.
 heatmap.2(x, dendrogram="row")  ## row dendrogram plotted and row reordering done.
 heatmap.2(x, dendrogram="col")  ## col dendrogram plotted and col reordering done.

 heatmap.2(x, keysize=2)         ## default - dendrogram plotted and reordering done.

 heatmap.2(x, Rowv=FALSE, dendrogram="both") ## generates a warning!
 heatmap.2(x, Rowv=NULL, dendrogram="both")  ## generates a warning!
 heatmap.2(x, Colv=FALSE, dendrogram="both") ## generates a warning!

 ## Reorder dendrogram by branch means rather than sums
 heatmap.2(x, reorderfun=function(d, w) reorder(d, w, agglo.FUN = mean) ) 这个比较好，按行或列的平均值聚类

 ## plot a sub-cluster using the same color coding as for the full heatmap  取数据的一部分进行绘制，用于多数据时的放大显示
 full <- heatmap.2(x)
 heatmap.2(x, Colv=full$colDendrogram[[2]], breaks=full$breaks)  # column subset
 heatmap.2(x, Rowv=full$rowDendrogram[[1]], breaks=full$breaks)  # row subset
 heatmap.2(x, Colv=full$colDendrogram[[2]],
              Rowv=full$rowDendrogram[[1]], breaks=full$breaks)  # both

 ## Show effect of row and column label rotation
 heatmap.2(x, srtCol=NULL)
 heatmap.2(x, srtCol=0,   adjCol = c(0.5,1) )
 heatmap.2(x, srtCol=45,  adjCol = c(1,1)   )   列标签倾斜45度，及其坐标
 heatmap.2(x, srtCol=135, adjCol = c(1,0)   )  
 heatmap.2(x, srtCol=180, adjCol = c(0.5,0) )
 heatmap.2(x, srtCol=225, adjCol = c(0,0)   ) ## not very useful
 heatmap.2(x, srtCol=270, adjCol = c(0,0.5) )
 heatmap.2(x, srtCol=315, adjCol = c(0,1)   )
 heatmap.2(x, srtCol=360, adjCol = c(0.5,1) )

 heatmap.2(x, srtRow=45, adjRow=c(0, 1) )
 heatmap.2(x, srtRow=45, adjRow=c(0, 1), srtCol=45, adjCol=c(1,1) ) 
 heatmap.2(x, srtRow=45, adjRow=c(0, 1), srtCol=270, adjCol=c(0,0.5) )


 ## Show effect of offsetRow/offsetCol (only works when srtRow/srtCol is
 ## not also present)
 heatmap.2(x, offsetRow=0, offsetCol=0)  调整行列标签与坐标轴之间的距离。我一般用这个。
 heatmap.2(x, offsetRow=1, offsetCol=1)
 heatmap.2(x, offsetRow=2, offsetCol=2)
 heatmap.2(x, offsetRow=-1, offsetCol=-1)

 heatmap.2(x, srtRow=0, srtCol=90, offsetRow=0, offsetCol=0) 
 heatmap.2(x, srtRow=0, srtCol=90, offsetRow=1, offsetCol=1)
 heatmap.2(x, srtRow=0, srtCol=90, offsetRow=2, offsetCol=2)
 heatmap.2(x, srtRow=0, srtCol=90, offsetRow=-1, offsetCol=-1)


 ## Show how to use 'extrafun' to replace the 'key' with a scatterplot
 lmat <- rbind( c(5,3,4), c(2,1,4) )
 lhei <- c(1.5, 4)
 lwid <- c(1.5, 4, 0.75)

 myplot <- function() {
             oldpar <- par("mar")
             par(mar=c(5.1, 4.1, 0.5, 0.5))
             plot(mpg ~ hp, data=x)
           }

 heatmap.2(x, lmat=lmat, lhei=lhei, lwid=lwid, key=FALSE, extrafun=myplot)

 ## show how to customize the color key
 heatmap.2(x,
           key.title=NA, # no title
           key.xlab=NA,  # no xlab
           key.par=list(mgp=c(1.5, 0.5, 0),
                        mar=c(2.5, 2.5, 1, 0)),
           key.xtickfun=function() {
                 breaks <- parent.frame()$breaks
                 return(list(
                      at=parent.frame()$scale01(c(breaks[1],
                                                  breaks[length(breaks)])),
                      labels=c(as.character(breaks[1]),
                               as.character(breaks[length(breaks)]))
                      ))
           })

 heatmap.2(x,
          breaks=256,
          key.title=NA,
          key.xlab=NA,
          key.par=list(mgp=c(1.5, 0.5, 0),
                       mar=c(1, 2.5, 1, 0)),
          key.xtickfun=function() {
               cex <- par("cex")*par("cex.axis")
               side <- 1
               line <- 0
               col <- par("col.axis")
               font <- par("font.axis")
               mtext("low", side=side, at=0, adj=0,
                     line=line, cex=cex, col=col, font=font)
               mtext("high", side=side, at=1, adj=1,
                     line=line, cex=cex, col=col, font=font)
               return(list(labels=FALSE, tick=FALSE))
          })


 ##
 ## Show effect of z-score scaling within columns, blue-red color scale
 ##
 hv <- heatmap.2(x, col=bluered, scale="column", tracecol="#303030")  带有Z-SCORE的红蓝白配色

 ###
 ## Look at the return values
 ###
 names(hv)

 ## Show the mapping of z-score values to color bins
 hv$colorTable

 ## Extract the range associated with white
 hv$colorTable[hv$colorTable[,"color"]=="#FFFFFF",] 提取白色区域的数值？

 ## Determine the original data values that map to white  这个才是提取白色区域的原始数据
 whiteBin <- unlist(hv$colorTable[hv$colorTable[,"color"]=="#FFFFFF",1:2])
 rbind(whiteBin[1] * hv$colSDs + hv$colMeans,
       whiteBin[2] * hv$colSDs + hv$colMeans )
 ##
 ## A more decorative heatmap, with z-score scaling along columns  给行列加上变色条（按照Z score值）
 ##
 hv <- heatmap.2(x, col=cm.colors(255), scale="column",
	       RowSideColors=rc, ColSideColors=cc, margin=c(5, 10),
	       xlab="specification variables", ylab= "Car Models",
	       main="heatmap(<Mtcars data>, ..., scale=\"column\")",
         tracecol="green", density="density")
 ## Note that the breakpoints are now symmetric about 0

 ## Color the labels to match RowSideColors and ColSideColors  让标签变色
 hv <- heatmap.2(x, col=cm.colors(255), scale="column",
         RowSideColors=rc, ColSideColors=cc, margin=c(5, 10),
	       xlab="specification variables", ylab= "Car Models",
	       main="heatmap(<Mtcars data>, ..., scale=\"column\")",
         tracecol="green", density="density", colRow=rc, colCol=cc,
         srtCol=45, adjCol=c(0.5,1))





 data(attitude)
 round(Ca <- cor(attitude), 2)
 symnum(Ca) # simple graphic

 # with reorder
 heatmap.2(Ca, 		 symm=TRUE, margin=c(6, 6), trace="none" )

 # without reorder
 heatmap.2(Ca, Rowv=FALSE, symm=TRUE, margin=c(6, 6), trace="none" )

 ## Place the color key below the image plot
 heatmap.2(x, lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(1.5, 4, 2 ) )

 ## Place the color key to the top right of the image plot
 heatmap.2(x, lmat=rbind( c(0, 3, 4), c(2,1,0 ) ), lwid=c(1.5, 4, 2 ) )

 ## For variable clustering, rather use distance based on cor():
 data(USJudgeRatings)
 symnum( cU <- cor(USJudgeRatings) )

 hU <- heatmap.2(cU, Rowv=FALSE, symm=TRUE, col=topo.colors(16),
              distfun=function(c) as.dist(1 - c), trace="none")

 ## The Correlation matrix with same reordering:
 hM <- format(round(cU, 2))
 hM

 # now with the correlation matrix on the plot itself 填充数值后的对角矩阵

 heatmap.2(cU, Rowv=FALSE, symm=TRUE, col=rev(heat.colors(16)),
             distfun=function(c) as.dist(1 - c), trace="none",
             cellnote=hM)

 ## genechip data examples
 ## Not run: 
#  library(affy)
#  data(SpikeIn)
#  pms <- SpikeIn@pm
# 
#  # just the data, scaled across rows
#  heatmap.2(pms, col=rev(heat.colors(16)), main="SpikeIn@pm",
#               xlab="Relative Concentration", ylab="Probeset",
#               scale="row")
# 
#  # fold change vs "12.50" sample
#  data <- pms / pms[, "12.50"]
#  data <- ifelse(data>1, data, -1/data)
#  heatmap.2(data, breaks=16, col=redgreen, tracecol="blue",
#                main="SpikeIn@pm Fold Changes\nrelative to 12.50 sample",
#                xlab="Relative Concentration", ylab="Probeset")
#  ## End(Not run)

